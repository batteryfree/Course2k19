{"remainingRequest":"/home/batteryfree/vue/w/node_modules/babel-loader/lib/index.js!/home/batteryfree/vue/w/node_modules/cache-loader/dist/cjs.js??ref--0-0!/home/batteryfree/vue/w/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/batteryfree/vue/w/src/components/FormSerch.vue?vue&type=script&lang=js&","dependencies":[{"path":"/home/batteryfree/vue/w/src/components/FormSerch.vue","mtime":1576046229551},{"path":"/home/batteryfree/vue/w/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/vue-loader/lib/index.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy9pbXBvcnQgZGF0YUpzb24gZnJvbSAnLi4vbW9jL2RhdGEtanNvbicKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGNvbiBmcm9tICcuLi9tb2MvY29uc29sZSc7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAnRm9ybVNlcmNoJywKCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGRhdGFGb3JDYXN0OiBudWxsLAogICAgICB0ZXN0OiBudWxsCiAgICB9OwogIH0sCgogIG1ldGhvZHM6IHsKICAgIHJlRm9ybWF0OiBmdW5jdGlvbiAoZGF0YUZvckNhc3QpIHsKICAgICAgaWYgKCFkYXRhRm9yQ2FzdCkgcmV0dXJuIG51bGw7CiAgICAgIGxldCByZUZvcm1hdERhdGEgPSBbXTsKICAgICAgbGV0IGluZGV4ID0gMDsKCiAgICAgIGlmIChuZXcgRGF0ZShkYXRhRm9yQ2FzdFswXS5kdCAqIDEwMDApLmdldFVUQ0hvdXJzKCkgIT09IDApIHsKICAgICAgICByZUZvcm1hdERhdGEucHVzaChbXSk7CiAgICAgIH0KCiAgICAgIGRhdGFGb3JDYXN0LmZvckVhY2goZSA9PiB7CiAgICAgICAgY29uc3QgZGF0ZSA9IG5ldyBEYXRlKGUuZHQgKiAxMDAwKTsKCiAgICAgICAgaWYgKGRhdGUuZ2V0VVRDSG91cnMoKSA9PT0gMCkgewogICAgICAgICAgcmVGb3JtYXREYXRhLnB1c2goW10pOwogICAgICAgICAgaW5kZXgrKzsKICAgICAgICB9CgogICAgICAgIHJlRm9ybWF0RGF0YVtpbmRleF0ucHVzaCh7CiAgICAgICAgICBkdDogZGF0ZS50b0xvY2FsZVRpbWVTdHJpbmcoJ3VrLVVBJywgewogICAgICAgICAgICB0aW1lWm9uZTogJ3V0YycKICAgICAgICAgIH0pLAogICAgICAgICAgdGVtcDogZS5tYWluLnRlbXAKICAgICAgICB9KTsKICAgICAgfSk7CiAgICAgIHJldHVybiByZUZvcm1hdERhdGE7CiAgICB9LAogICAgZ2V0RGF0YUZvcmNhc3Q6IGZ1bmN0aW9uICgpIHsKICAgICAgLy8qKioqKioqKioqaW5zZXJ0IEdFVC8qKioqKioqKiovCiAgICAgIGNvbnN0IEFQSV9LRVkgPSAnYjE4MWZiNDU3YmY0YTEzODY5OTNjNDVjZDg1MjE1YTgnOwogICAgICBjb25zdCBVUkwgPSBgaHR0cDovL2FwaS5vcGVud2VhdGhlcm1hcC5vcmcvZGF0YS8yLjUvZm9yZWNhc3Q/QVBQSUQ9JHtBUElfS0VZfSZxPVpvbG90b25vc2hhLHVhJnVuaXRzPW1ldHJpY2A7CiAgICAgIGxldCBhID0gbnVsbDsKICAgICAgYXhpb3MuZ2V0KFVSTCkudGhlbihyZXNwb25zZSA9PiB0aGlzLmRhdGFGb3JDYXN0ID0gcmVzcG9uc2UuZGF0YS5saXN0KTsKICAgICAgYSA9IHRoaXMuZGF0YUZvckNhc3Q7CiAgICAgIHJldHVybiBhOwogICAgfSwKICAgIGdldEZvcmVjYXRlOiBmdW5jdGlvbiAoKSB7CiAgICAgIGxldCBhID0gdGhpcy5nZXREYXRhRm9yY2FzdCgpOwogICAgICBpZiAoYSkgYSA9IHRoaXMucmVGb3JtYXQoYSk7CiAgICAgIHRoaXMuZGF0YUZvckNhc3QgPSBhOwogICAgICBjb24oYSk7CiAgICAgIHRoaXMuJGVtaXQoJ2dldEZvcmVjYXN0JywgdGhpcy5kYXRhRm9yQ2FzdCk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["FormSerch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAgBA;AACA,OAAA,KAAA,MAAA,OAAA;AACA,OAAA,GAAA,MAAA,gBAAA;AACA,eAAA;AACA,EAAA,IAAA,EAAA,WADA;;AAEA,EAAA,IAAA,GAAA;AACA,WAAA;AACA,MAAA,WAAA,EAAA,IADA;AAEA,MAAA,IAAA,EAAA;AAFA,KAAA;AAKA,GARA;;AAUA,EAAA,OAAA,EAAA;AACA,IAAA,QAAA,EAAA,UAAA,WAAA,EAAA;AACA,UAAA,CAAA,WAAA,EAAA,OAAA,IAAA;AAEA,UAAA,YAAA,GAAA,EAAA;AACA,UAAA,KAAA,GAAA,CAAA;;AAEA,UAAA,IAAA,IAAA,CAAA,WAAA,CAAA,CAAA,CAAA,CAAA,EAAA,GAAA,IAAA,EAAA,WAAA,OAAA,CAAA,EAAA;AACA,QAAA,YAAA,CAAA,IAAA,CAAA,EAAA;AACA;;AAEA,MAAA,WAAA,CAAA,OAAA,CAAA,CAAA,IAAA;AACA,cAAA,IAAA,GAAA,IAAA,IAAA,CAAA,CAAA,CAAA,EAAA,GAAA,IAAA,CAAA;;AACA,YAAA,IAAA,CAAA,WAAA,OAAA,CAAA,EAAA;AACA,UAAA,YAAA,CAAA,IAAA,CAAA,EAAA;AACA,UAAA,KAAA;AACA;;AACA,QAAA,YAAA,CAAA,KAAA,CAAA,CAAA,IAAA,CAAA;AAAA,UAAA,EAAA,EAAA,IAAA,CAAA,kBAAA,CAAA,OAAA,EAAA;AAAA,YAAA,QAAA,EAAA;AAAA,WAAA,CAAA;AAAA,UAAA,IAAA,EAAA,CAAA,CAAA,IAAA,CAAA;AAAA,SAAA;AACA,OAPA;AASA,aAAA,YAAA;AACA,KArBA;AAuBA,IAAA,cAAA,EAAA,YAAA;AACA;AACA,YAAA,OAAA,GAAA,kCAAA;AACA,YAAA,GAAA,GAAA,yDAAA,OAAA,gCAAA;AACA,UAAA,CAAA,GAAA,IAAA;AACA,MAAA,KAAA,CACA,GADA,CACA,GADA,EAEA,IAFA,CAEA,QAAA,IAAA,KAAA,WAAA,GAAA,QAAA,CAAA,IAAA,CAAA,IAFA;AAGA,MAAA,CAAA,GAAA,KAAA,WAAA;AACA,aAAA,CAAA;AACA,KAjCA;AAmCA,IAAA,WAAA,EAAA,YAAA;AACA,UAAA,CAAA,GAAA,KAAA,cAAA,EAAA;AACA,UAAA,CAAA,EAAA,CAAA,GAAA,KAAA,QAAA,CAAA,CAAA,CAAA;AACA,WAAA,WAAA,GAAA,CAAA;AACA,MAAA,GAAA,CAAA,CAAA,CAAA;AACA,WAAA,KAAA,CAAA,aAAA,EAAA,KAAA,WAAA;AACA;AAzCA;AAVA,CAAA","sourcesContent":["<template>\n    <form class=\"form\">\n        <h2 class=\"form__headline\">City to search</h2>\n        <div class=\"form__block\">\n            <label class=\"form__label\">City&nbsp;\n                <input class=\"form__input\" type=\"text\" placeholder=\"Input city\">\n            </label>\n            <label class=\"form__label\">Country&nbsp;\n                <input class=\"form__input\" type=\"text\" placeholder=\"Input country code\">\n            </label>\n            <button class=\"form__button\" type=\"button\" @click=\"getForecate\">Show weather</button>\n        </div>\n        {{test}}\n    </form>\n</template>\n<script>\n//import dataJson from '../moc/data-json'\nimport axios from 'axios'\nimport con from '../moc/console'\nexport default {\n    name: 'FormSerch',\n    data() {\n        return ({\n            dataForCast: null,\n            test: null\n        })\n\n    },\n\n    methods: {\n        reFormat: function(dataForCast){\n            if (!dataForCast) return null;\n\n            let reFormatData = [];\n            let index = 0;\n\n            if (new Date(dataForCast[0].dt * 1000).getUTCHours() !== 0) {\n                reFormatData.push([]);\n            }\n\n            dataForCast.forEach((e) => {\n                const date = new Date(e.dt * 1000);\n                if (date.getUTCHours() === 0) {\n                    reFormatData.push([]);\n                    index++;\n                }\n                reFormatData[index].push({dt: date.toLocaleTimeString('uk-UA',{timeZone: 'utc'}), temp: e.main.temp});\n            });\n\n            return reFormatData;\n        },\n\n        getDataForcast: function(){\n//**********insert GET/*********/\n            const API_KEY = 'b181fb457bf4a1386993c45cd85215a8';\n            const URL = `http://api.openweathermap.org/data/2.5/forecast?APPID=${API_KEY}&q=Zolotonosha,ua&units=metric`\n            let a = null\n            axios\n                .get(URL)\n                .then(response => (this.dataForCast = response.data.list));\n                a = this.dataForCast\n                return a  ;\n        },\n\n        getForecate: function () {\n            let a = this.getDataForcast();\n            if (a) a = this.reFormat(a);\n            this.dataForCast = a\n            con(a);\n            this.$emit('getForecast', this.dataForCast);\n        }\n\n    }\n}\n</script>\n<style>\n.form {\n    border: 1px solid #777;\n    width: 800px;\n    margin:auto;\n    padding-top: 25px;\n    padding-bottom: 50px;\n}\n\n.form__button {\n    background: transparent;\n    color:#777;\n    border: 2px solid #777;\n    border-radius: 50px;\n    height: 25px;\n    margin: 10px;\n}\n\n.form__button:hover {\n    background-color: #777;\n    color:#FFF;\n    border: 2px solid #333;\n}\n\n.form__button:focus {\n    background-color: #777;\n    color:#FFF;\n    border: 2px solid #333;\n}\n\n.form__block {\n    display: flex;\n    text-align: left;\n    justify-content:center;\n    align-items: flex-end;\n}\n\n.form__label {\n    display: block;\n    margin: 10px;\n}\n\n.form__input {\n    display: block;\n    margin-top: 5px;\n}\n\n.form__headline {\n    color: #555;}\n</style>"],"sourceRoot":"src/components"}]}