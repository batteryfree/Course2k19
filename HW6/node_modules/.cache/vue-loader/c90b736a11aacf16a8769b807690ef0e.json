{"remainingRequest":"/home/batteryfree/vue/w/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/batteryfree/vue/w/src/components/FormSerch.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/home/batteryfree/vue/w/src/components/FormSerch.vue","mtime":1576074223611},{"path":"/home/batteryfree/vue/w/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/batteryfree/vue/w/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouZm9ybSB7CiAgICBib3JkZXI6IDFweCBzb2xpZCAjNzc3OwogICAgd2lkdGg6IDgwMHB4OwogICAgbWFyZ2luOmF1dG87CiAgICBwYWRkaW5nLXRvcDogMjVweDsKICAgIHBhZGRpbmctYm90dG9tOiA1MHB4Owp9CgouZm9ybV9fYnV0dG9uIHsKICAgIGJhY2tncm91bmQ6IHRyYW5zcGFyZW50OwogICAgY29sb3I6Izc3NzsKICAgIGJvcmRlcjogMnB4IHNvbGlkICM3Nzc7CiAgICBib3JkZXItcmFkaXVzOiA1MHB4OwogICAgaGVpZ2h0OiAyNXB4OwogICAgbWFyZ2luOiAxMHB4Owp9CgouZm9ybV9fYnV0dG9uOmhvdmVyIHsKICAgIGJhY2tncm91bmQtY29sb3I6ICM3Nzc7CiAgICBjb2xvcjojRkZGOwogICAgYm9yZGVyOiAycHggc29saWQgIzMzMzsKfQoKLmZvcm1fX2J1dHRvbjpmb2N1cyB7CiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNzc3OwogICAgY29sb3I6I0ZGRjsKICAgIGJvcmRlcjogMnB4IHNvbGlkICMzMzM7Cn0KCi5mb3JtX19ibG9jayB7CiAgICBkaXNwbGF5OiBmbGV4OwogICAgdGV4dC1hbGlnbjogbGVmdDsKICAgIGp1c3RpZnktY29udGVudDpjZW50ZXI7CiAgICBhbGlnbi1pdGVtczogZmxleC1lbmQ7Cn0KCi5mb3JtX19sYWJlbCB7CiAgICBkaXNwbGF5OiBibG9jazsKICAgIG1hcmdpbjogMTBweDsKfQoKLmZvcm1fX2lucHV0IHsKICAgIGRpc3BsYXk6IGJsb2NrOwogICAgbWFyZ2luLXRvcDogNXB4Owp9CgouZm9ybV9faGVhZGxpbmUgewogICAgY29sb3I6ICM1NTU7fQo="},{"version":3,"sources":["FormSerch.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA","file":"FormSerch.vue","sourceRoot":"src/components","sourcesContent":["<template>\n    <form class=\"form\">\n        <h2 class=\"form__headline\">City to search</h2>\n        <div class=\"form__block\">\n            <label class=\"form__label\">City&nbsp;\n                <input v-model=\"city\" class=\"form__input\" type=\"text\" placeholder=\"Input city\">\n            </label>\n            <label class=\"form__label\">Country&nbsp;\n                <input v-model=\"country\" class=\"form__input\" type=\"text\" placeholder=\"Input country code\">\n            </label>\n            <button class=\"form__button\" type=\"button\" @click=\"getForecate\">Show weather</button>\n        </div>\n    </form>\n</template>\n<script>\nimport axios from 'axios'\nexport default {\n    name: 'FormSerch',\n\n    data() {\n        return ({\n            dataForCast: null,\n            city: 'Zolotonosha',\n            country: 'UA',\n        })\n    },\n\n    methods: {\n        reFormat: function(){\n            if (!this.dataForCast) return null;\n\n            let reFormatData = [];\n            let index = 0;\n\n            if (new Date(this.dataForCast[0].dt * 1000).getUTCHours() !== 0) {\n                reFormatData.push({date: new Date(this.dataForCast[0].dt * 1000).toLocaleDateString('uk-UA',{timeZone: 'utc'}), main:[]});\n            }\n\n            this.dataForCast.forEach((e) => {\n                const date = new Date(e.dt * 1000);\n                if (date.getUTCHours() === 0) {\n                    reFormatData.push({date: date.toLocaleDateString('uk-UA',{timeZone: 'utc'}), main:[]});\n                    index++;\n                }\n                reFormatData[index].main.push({dt: date.toLocaleTimeString('uk-UA',{timeZone: 'utc'}), temp: e.main.temp});\n            });\n            console.log(reFormatData)\n            this.dataForCast = reFormatData;\n        },\n\n        getForecate: function () {\n            const API_KEY = 'b181fb457bf4a1386993c45cd85215a8';\n            const URL = `http://api.openweathermap.org/data/2.5/forecast?APPID=${API_KEY}&q=${this.city},${this.country}&units=metric`\n            axios\n                .get(URL)\n                .then(response => (this.dataForCast = response.data.list))\n                .finally(() => {\n                    this.reFormat();\n                    this.$emit('getForecast', this.dataForCast);\n                });\n        }\n    }\n}\n</script>\n<style>\n.form {\n    border: 1px solid #777;\n    width: 800px;\n    margin:auto;\n    padding-top: 25px;\n    padding-bottom: 50px;\n}\n\n.form__button {\n    background: transparent;\n    color:#777;\n    border: 2px solid #777;\n    border-radius: 50px;\n    height: 25px;\n    margin: 10px;\n}\n\n.form__button:hover {\n    background-color: #777;\n    color:#FFF;\n    border: 2px solid #333;\n}\n\n.form__button:focus {\n    background-color: #777;\n    color:#FFF;\n    border: 2px solid #333;\n}\n\n.form__block {\n    display: flex;\n    text-align: left;\n    justify-content:center;\n    align-items: flex-end;\n}\n\n.form__label {\n    display: block;\n    margin: 10px;\n}\n\n.form__input {\n    display: block;\n    margin-top: 5px;\n}\n\n.form__headline {\n    color: #555;}\n</style>"]}]}