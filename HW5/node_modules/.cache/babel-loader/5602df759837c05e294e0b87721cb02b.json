{"ast":null,"code":"function generateField(sizeMineFieldX,sizeMineFieldY,mines){var mineField=generateMines(sizeMineFieldX,sizeMineFieldY,mines);return setMineCntainer(mineField,sizeMineFieldX,sizeMineFieldY);}function generateMines(sizeMinefieldX,sizeMinefieldY,mines){var sizeMinefield=sizeMinefieldX*sizeMinefieldY-1;var numOfMine=mines;var mineField=[];for(var y=0;y<sizeMinefieldY;y++){mineField[y]=[];for(var x=0;x<sizeMinefieldX;x++){mineField[y][x]=0;}}while(numOfMine!==0){var mine=getRundomNumber(0,sizeMinefield);var mineY=void 0;mineY=Math.trunc(mine/sizeMinefieldX);var mineX=mine-mineY*sizeMinefieldX;if(mineField[mineY][mineX]!==-1){mineField[mineY][mineX]--;numOfMine--;}}return mineField;}function getRundomNumber(min,max){return Math.floor(Math.random()*(max-min+1))+min;}function setMineCntainer(mineField,sizeMinefieldX,sizeMinefieldY){for(var y=0;y<sizeMinefieldY;y++){for(var x=0;x<sizeMinefieldX;x++){if(mineField[y][x]!==-1){if(mineField[y][x+1]===-1)mineField[y][x]++;if(mineField[y][x-1]===-1)mineField[y][x]++;if(y!==0){if(mineField[y-1][x]===-1)mineField[y][x]++;if(mineField[y-1][x-1]===-1)mineField[y][x]++;if(mineField[y-1][x+1]===-1)mineField[y][x]++;}if(y!==sizeMinefieldY-1){if(mineField[y+1][x]===-1)mineField[y][x]++;if(mineField[y+1][x-1]===-1)mineField[y][x]++;if(mineField[y+1][x+1]===-1)mineField[y][x]++;}}}}return mineField;}export default function generateFieldMine(sizeMineFieldX,sizeMineFieldY,mines){var mineField=generateField(sizeMineFieldX,sizeMineFieldY,mines);return mineField.map(function(row){return row.map(function(cell){var caption=cell;if(caption===0)caption=\"\\xA0\";if(caption===-1)caption='*';return{cap:caption,disabled:false,lock:false,children:\"\\xA0\"};});});}","map":{"version":3,"sources":["/home/batteryfree/HW-5/src/generator-field-min.js"],"names":["generateField","sizeMineFieldX","sizeMineFieldY","mines","mineField","generateMines","setMineCntainer","sizeMinefieldX","sizeMinefieldY","sizeMinefield","numOfMine","y","x","mine","getRundomNumber","mineY","Math","trunc","mineX","min","max","floor","random","generateFieldMine","map","row","cell","caption","cap","disabled","lock","children"],"mappings":"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","sourcesContent":["function generateField(sizeMineFieldX, sizeMineFieldY, mines) {\n    let mineField = generateMines(sizeMineFieldX, sizeMineFieldY, mines);\n    return setMineCntainer(mineField, sizeMineFieldX, sizeMineFieldY);\n}\n\nfunction generateMines(sizeMinefieldX, sizeMinefieldY, mines) {\n    let sizeMinefield = (sizeMinefieldX * sizeMinefieldY) - 1;\n    let numOfMine = mines;\n    let mineField = [];\n\n    for(let y = 0; y < sizeMinefieldY; y++) {\n        mineField[y] = [];\n        for (let x = 0; x < sizeMinefieldX; x++) {\n            mineField[y][x] = 0;\n        }\n    }\n\n    while (numOfMine !== 0) {\n        let mine = getRundomNumber(0, sizeMinefield);\n        let mineY;\n        mineY =  Math.trunc(mine / sizeMinefieldX);\n        let mineX = mine - mineY * sizeMinefieldX;\n        if (mineField[mineY][mineX] !== -1) {\n            mineField[mineY][mineX]--;\n            numOfMine--;\n        }\n    }\n    return mineField;\n}\n\nfunction getRundomNumber(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction setMineCntainer(mineField, sizeMinefieldX, sizeMinefieldY) {\n    for(let y = 0; y < sizeMinefieldY; y++) {\n        for(let x = 0; x < sizeMinefieldX; x++) {\n            if(mineField[y][x] !== -1) {\n                if(mineField[y][x + 1] === -1) mineField[y][x]++;\n                if(mineField[y][x - 1] === -1) mineField[y][x]++;\n                if (y !== 0) {\n                    if(mineField[y - 1][x] === -1) mineField[y][x]++;\n                    if(mineField[y - 1][x - 1] === -1) mineField[y][x]++;\n                    if(mineField[y - 1][x + 1] === -1) mineField[y][x]++;\n                }\n                if (y !== sizeMinefieldY - 1) {\n                    if(mineField[y + 1][x] === -1) mineField[y][x]++;\n                    if(mineField[y + 1][x - 1] === -1) mineField[y][x]++;\n                    if(mineField[y + 1][x + 1] === -1) mineField[y][x]++;\n                }\n            }\n        }\n    }\n    return mineField;\n}\n\nexport default function generateFieldMine (sizeMineFieldX, sizeMineFieldY, mines) {\n    let mineField = generateField(sizeMineFieldX, sizeMineFieldY, mines);\n\n    return mineField.map(row => {\n        return row.map(cell => {\n            let caption = cell;\n            if(caption === 0) caption = '\\u00A0';\n            if(caption === -1) caption = '*'\n            return {\n                        cap: caption,\n                        disabled: false,\n                        lock: false,\n                        children: '\\u00A0'\n                    }\n        });\n    });\n}\n"]},"metadata":{},"sourceType":"module"}